//
// Wrapper Bootstrap
// --------------------------------------------------

.fxp-sidebar:not(.fxp-sidebar-full-locked) {
    &.fxp-sidebar-fixed-top,
    &.fxp-sidebar-fixed-bottom {
        z-index: $zindex-sidebar-fixed;

        + .fxp-sidebar-swipe {
            z-index: $zindex-sidebar-swipe-fixed;
        }

        &.fxp-sidebar-open ~ .fxp-sidebar-obfuscator {
            @media (max-width: (map-get($sidebar-grid-breakpoints, 'lg') - 1)) {
                z-index: $zindex-sidebar-obfuscator-fixed;
            }
        }
    }
}

@media (max-width: (map-get($sidebar-grid-breakpoints, 'lg') - 1)) {
    .fxp-sidebar:not(.fxp-sidebar-full-locked) {
        &.fxp-sidebar-fixed-top,
        &.fxp-sidebar-fixed-bottom {
            z-index: $zindex-sidebar;

            + .fxp-sidebar-swipe {
                z-index: $zindex-sidebar-swipe;
            }

            &.fxp-sidebar-open ~ .fxp-sidebar-obfuscator {
                z-index: $zindex-sidebar-obfuscator;
            }
        }
    }
}

@media (min-width: map-get($sidebar-grid-breakpoints, 'lg')) {
    .fxp-sidebar.fxp-sidebar-locked:not(.fxp-sidebar-full-locked) {
        &.fxp-sidebar-static-top,
        &.fxp-sidebar-static-bottom {
            z-index: $zindex-sidebar-static;

            + .fxp-sidebar-swipe {
                z-index: $zindex-sidebar-swipe-static;
            }

            &.fxp-sidebar-open ~ .fxp-sidebar-obfuscator {
                @media (max-width: (map-get($sidebar-grid-breakpoints, 'lg') - 1)) {
                    z-index: $zindex-sidebar-obfuscator-static;
                }
            }
        }

        &.fxp-sidebar-static-top {
            > .sticky-header {
                padding-top: $sidebar-navbar-height + 1 !important;
            }

            .fxp-sidebar-menu {
                > .fxp-sidebar-group:first-child,
                > .fxp-sidebar-item:first-child {
                    padding-top: $sidebar-navbar-height + 1;
                }
            }
        }

        &.fxp-sidebar-static-bottom {
            .fxp-sidebar-menu {
                > .fxp-sidebar-group:last-child,
                > .fxp-sidebar-item:last-child {
                    padding-bottom: $sidebar-navbar-height;
                }
            }
        }

        &.fxp-sidebar-fixed-top {
            top: $sidebar-navbar-height;
        }

        &.fxp-sidebar-fixed-bottom {
            bottom: $sidebar-navbar-height;
        }
    }

    .fxp-sidebar.fxp-sidebar-locked {
        ~ .fxp-sidebar-obfuscator {
            display: none;
        }
    }
}

//
// Bootstrap Container Main
// --------------------------------------------------

.container-main {
    &.container-force-open-left {
        @media (min-width: map-get($sidebar-grid-breakpoints, 'lg')) {
            padding-left: $sidebar-width;

            > .navbar:not(.fixed-top):not(.fixed-bottom):not(.sticky-top) {
                margin-left: -$sidebar-width;
            }
        }
    }

    &.container-force-open-right {
        @media (min-width: map-get($sidebar-grid-breakpoints, 'lg')) {
            padding-right: $sidebar-width;

            > .navbar:not(.fixed-top):not(.fixed-bottom):not(.sticky-top) {
                margin-right: -$sidebar-width;
            }
        }
    }

    &.container-force-open-left,
    &.container-force-open-right {
        > .container,
        > .navbar > .container {
            @media (min-width: map-get($sidebar-grid-breakpoints, 'lg')) {
                width: map-get($sidebar-container-max-widths, 'lg') - $sidebar-width;
            }
            @media (min-width: map-get($sidebar-grid-breakpoints, 'xl')) {
                width: map-get($sidebar-container-max-widths, 'lg') - $sidebar-width;
            }
            @media (min-width: (map-get($sidebar-grid-breakpoints, 'xl') + $sidebar-width)) {
                width: map-get($sidebar-container-max-widths, 'lg');
            }
            @media (min-width: map-get($sidebar-grid-breakpoints, 'xxl')) {
                width: map-get($sidebar-container-max-widths, 'xl') - $sidebar-width;
            }
            @media (min-width: (map-get($sidebar-grid-breakpoints, 'xxl') + $sidebar-width)) {
                width: map-get($sidebar-container-max-widths, 'xl');
            }
        }
    }

    &.container-full-locked {
        &.container-force-open-left {
            > .navbar > .container-fluid {
                @media (min-width: map-get($sidebar-grid-breakpoints, 'lg')) {
                    padding-left: unquote('calc(#{$sidebar-width} + #{$sidebar-container-padding-x})');
                }
            }
        }

        &.container-force-open-right {
            > .navbar > .container-fluid {
                @media (min-width: map-get($sidebar-grid-breakpoints, 'lg')) {
                    padding-right: unquote('calc(#{$sidebar-width} + #{$sidebar-container-padding-x})');
                }
            }
        }
    }

    &.container-force-open-left.container-force-open-right {
        > .container,
        > .navbar > .container {
            @media (min-width: map-get($sidebar-grid-breakpoints, 'lg')) {
                width: map-get($sidebar-container-max-widths, 'lg') - ($sidebar-width * 2);
            }
            @media (min-width: map-get($sidebar-grid-breakpoints, 'xl')) {
                width: map-get($sidebar-container-max-widths, 'lg') - ($sidebar-width * 2);
            }
            @media (min-width: (map-get($sidebar-grid-breakpoints, 'xl') + $sidebar-width)) {
                width: map-get($sidebar-container-max-widths, 'lg') - $sidebar-width;
            }
            @media (min-width: (map-get($sidebar-grid-breakpoints, 'xl') + ($sidebar-width * 2))) {
                width: map-get($sidebar-container-max-widths, 'lg');
            }
            @media (min-width: map-get($sidebar-grid-breakpoints, 'xxl')) {
                width: map-get($sidebar-container-max-widths, 'xl') - ($sidebar-width * 2);
            }
            @media (min-width: (map-get($sidebar-grid-breakpoints, 'xxl') + $sidebar-width)) {
                width: map-get($sidebar-container-max-widths, 'xl') - $sidebar-width;
            }
            @media (min-width: (map-get($sidebar-grid-breakpoints, 'xxl') + ($sidebar-width * 2))) {
                width: map-get($sidebar-container-max-widths, 'xl');
            }
        }
    }

    &.container-mini-left {
        @media (min-width: map-get($sidebar-grid-breakpoints, 'lg')) {
            padding-left: $sidebar-mini-width;
        }

        > .navbar > .container-fluid {
            @media (min-width: map-get($sidebar-grid-breakpoints, 'lg')) {
                padding-left: unquote('calc(#{$sidebar-mini-width} + #{$sidebar-container-padding-x})');
            }
        }
    }

    &.container-mini-right {
        @media (min-width: map-get($sidebar-grid-breakpoints, 'lg')) {
            padding-right: $sidebar-mini-width;
        }

        > .navbar > .container-fluid {
            @media (min-width: map-get($sidebar-grid-breakpoints, 'lg')) {
                padding-right: unquote('calc(#{$sidebar-mini-width} + #{$sidebar-container-padding-x})');
            }
        }
    }

    &.container-mini-left,
     &.container-mini-right {
         > .container,
         > .navbar > .container {
             @media (min-width: map-get($sidebar-grid-breakpoints, 'lg')) {
                 width: map-get($sidebar-container-max-widths, 'lg') - $sidebar-mini-width;
             }
             @media (min-width: map-get($sidebar-grid-breakpoints, 'xl')) {
                 width: map-get($sidebar-container-max-widths, 'lg') - $sidebar-mini-width;
             }
             @media (min-width: (map-get($sidebar-grid-breakpoints, 'xl') + $sidebar-mini-width)) {
                 width: map-get($sidebar-container-max-widths, 'lg');
             }
             @media (min-width: map-get($sidebar-grid-breakpoints, 'xxl')) {
                 width: map-get($sidebar-container-max-widths, 'xl') - $sidebar-mini-width;
             }
             @media (min-width: (map-get($sidebar-grid-breakpoints, 'xxl') + $sidebar-mini-width)) {
                 width: map-get($sidebar-container-max-widths, 'xl');
             }
         }
     }
}
